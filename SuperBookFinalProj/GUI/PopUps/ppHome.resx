<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="roomBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA8AAAAIcCAYAAAA5Xcd7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAH
        XgAAB14BODEn8gAAECNJREFUeF7t3DGLJWkdxeH5AiYGC2YbmAoLooGBfgQzNxLEwC9gLp2qLUaikaCM
        Gu1EKqLJLOuYbycbCQYmyyIm5nr+UC59y9vd9m7dmpozzwMnqX7fTu4kP2r6PgEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgdfaL3733y+zf
        Zhvse8s/KwAAgONJtAhg22oCGAAAOK5EiwC2rSaAAQCA40q0CGDbagIYAAA4rkSLALatJoABAIDjSrQI
        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
        okUA20wAAwAA3RItAthmAhgAAOiWaBHANhPAAABAt0SLALaZAAYAALolWgSwzQQwAADQLdEigG0mgAEA
        gG6JFgFsMwEMAAB0S7QIYJsJYAAAoFuiRQDbTAADAADdEi0C2GYCGAAA6JZoEcA2E8AAAEC3RIsAtpkA
        BgAAuiVaBLDNBDAAANAt0SKAbSaAAQCAbokWAWwzAQwAAHRLtAhgmwlgAACgW6JFANtMAAMAAN0SLQLY
        ZgIYAADolmgRwDYTwAAAQLdEiwC2mQAGAAC6JVoEsM0EMAAA0C3RIoBtJoABAIBuiRYBbDMBDAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBL
        8eTJfwBWL9J/TtEMlwAAAABJRU5ErkJggg==
</value>
  </data>
</root>